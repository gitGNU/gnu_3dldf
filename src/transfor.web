@q transfor.web @>
  
@q * (0) Copyright and License.@>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing. @>
@q Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, @>
@q 2011, 2012, 2013, 2014 The Free Software Foundation @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version. @>

@q GNU 3DLDF is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details. @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA@>

@q GNU 3DLDF is a GNU package.  @>
@q It is part of the GNU Project of the  @>
@q Free Software Foundation @>
@q and is published under the GNU General Public License. @>
@q See the website http://www.gnu.org @>
@q for more information.   @>
@q GNU 3DLDF is available for downloading from @>
@q http://www.gnu.org/software/3dldf/LDF.html. @>

@q (``@@'' stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de @>
@q The mailing list help-3dldf@@gnu.org is available for people to @>
@q ask other users for help.  @>
@q The mailing list info-3dldf@@gnu.org is for sending @>
@q announcements to users. To subscribe to these mailing lists, send an @>
@q email with ``subscribe <email-address>'' as the subject.  @>

@q The author can be contacted at: @>

@q Laurence D. Finston                 @> 
@q c/o Free Software Foundation, Inc.  @>
@q 51 Franklin St, Fifth Floor         @> 
@q Boston, MA  02110-1301              @>
@q USA                                 @>

@q Laurence.Finston@@gmx.de (@@ stands for a single ``at'' sign.)@>


@q * (0) Transformations.@>
@** Transformations\quad ({\tt transform\PERIOD web}).\hfil

\LOG
\initials{LDF 2003.11.12.}  Removed the version control identifiers from the CWEB
files for the distribution of 3DLDF 1.1.  They're still used in my
development versions.

\initials{LDF 2003.12.10.}  Put the version control identifiers back
into my release versions for 3DLDF 1.1.4.  I've already put some of
them back in, now I'm doing the rest of them.  However, the release
versions are now in their own RCS repository.
\ENDLOG 

@q * Include files. @>

@ Include files.
\initials{LDF 2014.06.12.}

@<Include files@>=

#if HAVE_CONFIG_H
#include "config.h"
#endif 

#define _GNU_SOURCE

#include <stdlib.h>
#include <stdio.h>   

#include <string.h>
#include <getopt.h> 

#include <stdarg.h>
#include <stdexcept>

#include <algorithm>
#include <bitset>
#include <deque>
#include <errno.h>
#include <exception>

#include <float.h>  
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iostream>
#include <iterator>
#include <limits.h>
#include <limits>     
#include <list>   
#include <map>   

#include <math.h>
#include <new>

#include <pthread.h>   

#include <sstream>   
#include <stack>   

#include <string> 
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

#include <valarray>
#include <vector>

#include "glblcnst.h++"


@q * {\bf Transform} class definition.@>
@* {\bf Transform} class definition.@>
The |Transform| class has a $4\times4$ transformation matrix as its only
data member and a number of member functions.  |Points|, |Pictures|,
and |Focuses| contain |Transforms| as data members.
\initials{LDF Undated.}


@f Transform int  
@<Declare |class Transform|@>=

template <class C> class Transform
{

  C transform_matrix[4][4];

  public:
  
  @<Declare |Transform| functions@>@;@/

				    
};

@q ** (2) Constructors @>
@ Constructors.

@q ** (2) Show.  @>
@ Show (|show|).  
\initials{LDF 2014.06.12.}

@<Declare |Transform| functions@>=

void
show(string s = "Transform:")

@
@<|Transform::show| definition@>=

void
Transform::show(string s = "Transform:")
{
  cout << s 
        << endl
        << "transform_matrix:"
        << endl;

  for(int i = 0; i < 4; i++)
    {
    for (int j = 0; j < 4; j++)
      {
	cout << setw(7) << setprecision(3) 
             << transform_matrix[i][j] << " ";
      }
    cout << endl;
    }
    cout << endl;

    return;

}  /* End of |Transform::show| definition  */




@q * Putting {\bf Transform} together. @>
@ Putting {\bf Transform} together.

@ This is what's compiled.
@c
@<Include files@>@;
using namespace std;
using namespace tdldf;
@<Declare |class Transform|@>@;
@<|Transform::show| definition@>@;@/

@ This is what's written to \filename{transfor.h}.
@(transfor.h@>=
#ifndef TRANSFOR_H_KNOWN
#define TRANSFOR_H_KNOWN
@<Declare |class Transform|@>@;
#endif


@q Local Variables: @>
@q mode:CWEB @>
@q indent-tabs-mode:nil @>
@q outline-minor-mode:t @>
@q End: @>

   
