@q dgrmtype.web @>
@q Created by Laurence D. Finston (LDF) Wed Fri Mar  7 16:21:10 CET 2014 @>

@q * Copyright and License. @>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing. @>
@q Copyright (C) 2014 The Free Software Foundation                          @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version. @>

@q GNU 3DLDF is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details. @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA @>

@q GNU 3DLDF is a GNU package.  @>
@q It is part of the GNU Project of the  @>
@q Free Software Foundation @>
@q and is published under the GNU General Public License. @>
@q See the website http://www.gnu.org @>
@q for more information.   @>
@q GNU 3DLDF is available for downloading from @>
@q http://www.gnu.org/software/3dldf/LDF.html. @>

@q (``@@'' stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de @>
@q The mailing list help-3dldf@@gnu.org is available for people to @>
@q ask other users for help.  @>
@q The mailing list info-3dldf@@gnu.org is for sending @>
@q announcements to users. To subscribe to these mailing lists, send an @>
@q email with ``subscribe <email-address>'' as the subject.  @>

@q The author can be contacted at: @>

@q Laurence D. Finston @>
@q Kreuzbergring 41 @>
@q D-37075 Goettingen @>
@q Germany @>

@q Laurence.Finston@@gmx.de (@@ stands for a single ``at'' sign.)@>




@
@<Include files@>=

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <string>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <bitset>

#if HAVE_CONFIG_H
#include <config.h>
#endif

#include <fldtype.hxx>

@q * (1) @>
@
@<class |Diagram_Type| declaration@>=

template <int T, int U>
class Diagram_Type
{

  public:

     @<|Diagram_Type| function declarations@>@;@/

};


@q * (1) @>
@
@q ** (2) Declaration @>

@<|Diagram_Type| function declarations@>=

Diagram_Type(void);

@q ** (2) Definition  @>
@
@<|Diagram_Type| constructor definition@>=

template <int T, int U>
Diagram_Type<T, U>::Diagram_Type(void) 
{
   cerr << "T == " << T << ", U == " << U << endl;

   return;

}  /* End of |Diagram_Type| constructor definition  */



@q * (1) @>
@
@<|Diagram_Type| function declarations@>=

#if 0 
void
show(string s);
#endif 

@
@<|Diagram_Type::show| definition@>=

#if 0 
void
Diagram_Type::show(string s)
{
    if (s.empty())
       s = "Diagram_Type:";

    cerr << s << endl;

    return;


}
#endif 

@
@c
@<Include files@>@;@/
using namespace std;
@<class |Diagram_Type| declaration@>@;@/
extern ofstream out_strm;
@<|Diagram_Type| constructor definition@>@;@/

#if 0 
@<|Diagram_Type::show| definition@>@;@/
#endif 

@
@(dgrmtype.hxx@>=
using namespace std;
@<class |Diagram_Type| declaration@>@;@/
@<|Diagram_Type| constructor definition@>@;@/




@q Local Variables: @>
@q mode:CWEB @>
@q abbrev-mode:t @>
@q outline-regexp:"@@q *\\*+" @>
@q eval:(outline-minor-mode t) @>
@q eval:(font-lock-mode -1) @>
@q End: @>


